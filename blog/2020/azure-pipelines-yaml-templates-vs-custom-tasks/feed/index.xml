<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Azure Pipelines: YAML Templates VS. Custom Tasks	</title>
	<atom:link href="/blog/2020/azure-pipelines-yaml-templates-vs-custom-tasks/feed/" rel="self" type="application/rss+xml" />
	<link>/blog/2020/azure-pipelines-yaml-templates-vs-custom-tasks/</link>
	<description>A blog about things I learn at the keyboard: DevOps, CI/CD, Cloud, Automation, to name a few....</description>
	<lastBuildDate>Sun, 20 Dec 2020 21:30:00 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.7.1</generator>
	<item>
		<title>
		By: Josh Johanning		</title>
		<link>/blog/2020/azure-pipelines-yaml-templates-vs-custom-tasks/#comment-15071</link>

		<dc:creator><![CDATA[Josh Johanning]]></dc:creator>
		<pubDate>Sun, 20 Dec 2020 21:30:00 +0000</pubDate>
		<guid isPermaLink="false">/?p=937#comment-15071</guid>

					<description><![CDATA[@Tomasz:
If you’re using a Repository resource and referencing a job template, you wouldn’t have to worry about a checkout of the yaml? You would just reference via path-to-yaml@templates, for example. 


I also think one benefit a team might consider when creating their own custom task is the added ability in managing versions of the task. If you don’t want teams using old code, you just push a (minor or patch) update. With yaml, a team can pin to the specific commit, branch, or tag, which may be beneficial for backwards compatibility but if you are in a situation where an older version of the template has a crucial bug or security vulnerability, finding out whose using what version of the yaml is tricky.]]></description>
			<content:encoded><![CDATA[<p>@Tomasz:<br />
If you’re using a Repository resource and referencing a job template, you wouldn’t have to worry about a checkout of the yaml? You would just reference via path-to-yaml@templates, for example. </p>
<p>I also think one benefit a team might consider when creating their own custom task is the added ability in managing versions of the task. If you don’t want teams using old code, you just push a (minor or patch) update. With yaml, a team can pin to the specific commit, branch, or tag, which may be beneficial for backwards compatibility but if you are in a situation where an older version of the template has a crucial bug or security vulnerability, finding out whose using what version of the yaml is tricky.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Travis		</title>
		<link>/blog/2020/azure-pipelines-yaml-templates-vs-custom-tasks/#comment-14169</link>

		<dc:creator><![CDATA[Travis]]></dc:creator>
		<pubDate>Wed, 25 Nov 2020 14:42:16 +0000</pubDate>
		<guid isPermaLink="false">/?p=937#comment-14169</guid>

					<description><![CDATA[Great discussion and comparison. We additionally use Custom Tasks for functionality that we may want both in YAML pipelines as well as the visual &quot;Release&quot; workflow for deployments. Our teams are in transition between moving from &quot;Releases&quot; to YAML Pipelines and this is effective in allowing teams to transition over easily.]]></description>
			<content:encoded><![CDATA[<p>Great discussion and comparison. We additionally use Custom Tasks for functionality that we may want both in YAML pipelines as well as the visual &#8220;Release&#8221; workflow for deployments. Our teams are in transition between moving from &#8220;Releases&#8221; to YAML Pipelines and this is effective in allowing teams to transition over easily.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Tomasz		</title>
		<link>/blog/2020/azure-pipelines-yaml-templates-vs-custom-tasks/#comment-14146</link>

		<dc:creator><![CDATA[Tomasz]]></dc:creator>
		<pubDate>Mon, 23 Nov 2020 13:26:21 +0000</pubDate>
		<guid isPermaLink="false">/?p=937#comment-14146</guid>

					<description><![CDATA[If I may add my observations:
Using Custom tasks has this benefit that if:
- you want to use your custom step in the &quot;deployment&quot; type of Stage (where your repository is not being checkout) 
- you want to keep your custom step logic in the seprerate repository

you don&#039;t need to worry about downloading those steps artifacts 
With templates, you might need to add &quot;push artifact&quot; in one stage and &quot;download artifact&quot; in the second. 

We&#039;ve started using templates with the Azure Artifact repository to simplify that.]]></description>
			<content:encoded><![CDATA[<p>If I may add my observations:<br />
Using Custom tasks has this benefit that if:<br />
&#8211; you want to use your custom step in the &#8220;deployment&#8221; type of Stage (where your repository is not being checkout)<br />
&#8211; you want to keep your custom step logic in the seprerate repository</p>
<p>you don&#8217;t need to worry about downloading those steps artifacts<br />
With templates, you might need to add &#8220;push artifact&#8221; in one stage and &#8220;download artifact&#8221; in the second. </p>
<p>We&#8217;ve started using templates with the Azure Artifact repository to simplify that.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
